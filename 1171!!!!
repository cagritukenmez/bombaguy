/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeZeroSumSublists(ListNode* head) {
        ListNode* dummy= new ListNode(0);
        dummy->next = head;
        unordered_map<int,ListNode*> mapp1;
        mapp1[0]=dummy;
        int sum=0;
        for(ListNode* itr = head;itr != nullptr;itr = itr->next){
            sum+=itr->val;
            if(mapp1.find(sum) != mapp1.end()){
                ListNode* toDel = mapp1[sum]->next;
                int tempSum = sum+toDel->val;
                while(toDel != itr){
                    mapp1.erase(tempSum);
                    toDel=toDel->next;
                    tempSum += toDel->val;
                }
                mapp1[sum]->next=itr->next;
            }else{
                mapp1[sum]=itr;
            }
        }
        return dummy->next;
    }
};
